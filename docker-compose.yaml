version: "3.2"
services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    command: ./api
    networks:
      - rabbitmq_go_net
  bff:
    build:
      context: ./notification-tracking-app
      dockerfile: Dockerfile
    ports:
      - 1323:1323
    command: ./bff
    networks:
      - rabbitmq_go_net
  rabbitmq:
    build:
            context: .
            dockerfile: Dockerfile.rabbitmq
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - rabbitmq:/var/lib/rabbitmq/
    networks:
        - rabbitmq_go_net
  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - cache:/data
    networks:
      - rabbitmq_go_net
  elasticsearch:
    image: 'docker.elastic.co/elasticsearch/elasticsearch:7.10.2'
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
  kibana:
    image: 'docker.elastic.co/kibana/kibana:7.10.2'
    ports:
      - "5601:5601"
    hostname: kibana
    depends_on:
      - elasticsearch
networks:
  rabbitmq_go_net:
    driver: bridge
volumes:
  rabbitmq: {}
  cache:
    driver: local
  esdata:
    driver: local