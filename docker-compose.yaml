version: "3.2"
services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    labels:
      co.elastic.logs/enabled: true
      co.elastic.logs/json.keys_under_root: true
      co.elastic.logs/json.overwrite_keys: true
      co.elastic.logs/json.add_error_key: true
      co.elastic.logs/json.expand_keys: true
    ports:
      - 8080:8080
    command: ./api
    restart: on-failure
    depends_on:
      - rabbitmq
    networks:
      - rabbitmq_go_net
  bff:
    build:
      context: ./notification-tracking-app
      dockerfile: Dockerfile
    labels:
      co.elastic.logs/enabled: true
      co.elastic.logs/json.keys_under_root: true
      co.elastic.logs/json.overwrite_keys: true
      co.elastic.logs/json.add_error_key: true
      co.elastic.logs/json.expand_keys: true
    ports:
      - 1323:1323
    restart: on-failure
    depends_on:
      - rabbitmq
    command: ./bff
    networks:
      - rabbitmq_go_net
  rabbitmq:
    build:
            context: .
            dockerfile: Dockerfile.rabbitmq
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 15s
      retries: 1
    volumes:
        - rabbitmq:/var/lib/rabbitmq/
    networks:
        - rabbitmq_go_net
  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - cache:/data
    networks:
      - rabbitmq_go_net
  elasticsearch:
    labels:
      co.elastic.logs/enabled: false
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:9200/_cat/health"]
      interval: 3s
      timeout: 3s
      retries: 80
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
  filebeat:
    labels:
      co.elastic.logs/enabled: false
    user: root
    image: docker.elastic.co/beats/filebeat:7.14.0
    command: filebeat -e -strict.perms=false
    volumes:
      - ./filebeat.docker.yml:/usr/share/filebeat/filebeat.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
  kibana:
    image: 'docker.elastic.co/kibana/kibana:7.14.0'
    labels:
      co.elastic.logs/enabled: false
    ports:
      - "5601:5601"
    hostname: kibana
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:5601/api/status"]
      interval: 3s
      timeout: 3s
      retries: 80
    depends_on:
      elasticsearch:
        condition: service_healthy

networks:
  mynetwork:
  rabbitmq_go_net:
    driver: bridge
volumes:
  rabbitmq: {}
  cache:
    driver: local
  esdata:
    driver: local